package com.course.daoImpl;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.course.dao.CourseDao;
import com.course.entity.Course;
import com.course.exception.ResourceNotFoundException;
import com.course.repository.CourseRepository;

@Service
public class CourseDaoImpl implements CourseDao{

	@Autowired
	private CourseRepository repository;
	
	List<Course> list= List.of(
			new Course(101,"Java Developer","Description","HTML","1000"),
			new Course(102,"MICROSERVICES Developer","Description","HTML","1000"),
			new Course(103,"Pathon Developer","Description","HTML","1000"),
			new Course(104,"PHP Developer","Description","HTML","1000"),
			new Course(105,"SQL Developer","Description","HTML","1000")
			);
	
	
	@Override
	public Course saveCourse(Course course) {
		
		return this.repository.save(course);						
	}

	@Override
	public Course findById(int cid) throws ResourceNotFoundException {
		
		return this.repository.findById(cid).orElseThrow(() -> new ResourceNotFoundException("course","Id",String.valueOf(cid)));		
		
	}

	@Override
	public boolean delete(int cid) throws ResourceNotFoundException {

		boolean status=true;
		Course course = this.repository.findById(cid).orElseThrow(() -> new ResourceNotFoundException("Course","Id",String.valueOf(cid)));
		
		if(course==null)
		{
			status=false;
		}
		
		return status;
		
	}
}